<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tc.data.test.InstitutionlogMapper">
  <resultMap id="BaseResultMap" type="tc.data.test.Institutionlog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="insid" jdbcType="BIGINT" property="insid" />
    <result column="cid" jdbcType="BIGINT" property="cid" />
    <result column="modifyTime" jdbcType="TIMESTAMP" property="modifytime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="tc.data.test.InstitutionlogWithBLOBs">
    <result column="behavior" jdbcType="LONGVARCHAR" property="behavior" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, insid, cid, modifyTime
  </sql>
  <sql id="Blob_Column_List">
    behavior, description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="tc.data.test.InstitutionlogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from institutionLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="tc.data.test.InstitutionlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from institutionLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from institutionLog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from institutionLog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tc.data.test.InstitutionlogExample">
    delete from institutionLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tc.data.test.InstitutionlogWithBLOBs">
    insert into institutionLog (id, insid, cid, 
      modifyTime, behavior, description
      )
    values (#{id,jdbcType=BIGINT}, #{insid,jdbcType=BIGINT}, #{cid,jdbcType=BIGINT}, 
      #{modifytime,jdbcType=TIMESTAMP}, #{behavior,jdbcType=LONGVARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="tc.data.test.InstitutionlogWithBLOBs">
    insert into institutionLog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="insid != null">
        insid,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="modifytime != null">
        modifyTime,
      </if>
      <if test="behavior != null">
        behavior,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="insid != null">
        #{insid,jdbcType=BIGINT},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=BIGINT},
      </if>
      <if test="modifytime != null">
        #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="behavior != null">
        #{behavior,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tc.data.test.InstitutionlogExample" resultType="java.lang.Integer">
    select count(*) from institutionLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update institutionLog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.insid != null">
        insid = #{record.insid,jdbcType=BIGINT},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=BIGINT},
      </if>
      <if test="record.modifytime != null">
        modifyTime = #{record.modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.behavior != null">
        behavior = #{record.behavior,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update institutionLog
    set id = #{record.id,jdbcType=BIGINT},
      insid = #{record.insid,jdbcType=BIGINT},
      cid = #{record.cid,jdbcType=BIGINT},
      modifyTime = #{record.modifytime,jdbcType=TIMESTAMP},
      behavior = #{record.behavior,jdbcType=LONGVARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update institutionLog
    set id = #{record.id,jdbcType=BIGINT},
      insid = #{record.insid,jdbcType=BIGINT},
      cid = #{record.cid,jdbcType=BIGINT},
      modifyTime = #{record.modifytime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tc.data.test.InstitutionlogWithBLOBs">
    update institutionLog
    <set>
      <if test="insid != null">
        insid = #{insid,jdbcType=BIGINT},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=BIGINT},
      </if>
      <if test="modifytime != null">
        modifyTime = #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="behavior != null">
        behavior = #{behavior,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="tc.data.test.InstitutionlogWithBLOBs">
    update institutionLog
    set insid = #{insid,jdbcType=BIGINT},
      cid = #{cid,jdbcType=BIGINT},
      modifyTime = #{modifytime,jdbcType=TIMESTAMP},
      behavior = #{behavior,jdbcType=LONGVARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tc.data.test.Institutionlog">
    update institutionLog
    set insid = #{insid,jdbcType=BIGINT},
      cid = #{cid,jdbcType=BIGINT},
      modifyTime = #{modifytime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="tc.data.test.Institutionlog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="insid" jdbcType="BIGINT" property="insid" />
    <result column="cid" jdbcType="BIGINT" property="cid" />
    <result column="modifyTime" jdbcType="TIMESTAMP" property="modifytime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="tc.data.test.InstitutionlogWithBLOBs">
    <result column="behavior" jdbcType="LONGVARCHAR" property="behavior" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, insid, cid, modifyTime
  </sql>
  <sql id="Blob_Column_List">
    behavior, description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="tc.data.test.InstitutionlogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from institutionLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="tc.data.test.InstitutionlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from institutionLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from institutionLog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from institutionLog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tc.data.test.InstitutionlogExample">
    delete from institutionLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tc.data.test.InstitutionlogWithBLOBs">
    insert into institutionLog (id, insid, cid, 
      modifyTime, behavior, description
      )
    values (#{id,jdbcType=BIGINT}, #{insid,jdbcType=BIGINT}, #{cid,jdbcType=BIGINT}, 
      #{modifytime,jdbcType=TIMESTAMP}, #{behavior,jdbcType=LONGVARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="tc.data.test.InstitutionlogWithBLOBs">
    insert into institutionLog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="insid != null">
        insid,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="modifytime != null">
        modifyTime,
      </if>
      <if test="behavior != null">
        behavior,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="insid != null">
        #{insid,jdbcType=BIGINT},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=BIGINT},
      </if>
      <if test="modifytime != null">
        #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="behavior != null">
        #{behavior,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tc.data.test.InstitutionlogExample" resultType="java.lang.Integer">
    select count(*) from institutionLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update institutionLog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.insid != null">
        insid = #{record.insid,jdbcType=BIGINT},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=BIGINT},
      </if>
      <if test="record.modifytime != null">
        modifyTime = #{record.modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.behavior != null">
        behavior = #{record.behavior,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update institutionLog
    set id = #{record.id,jdbcType=BIGINT},
      insid = #{record.insid,jdbcType=BIGINT},
      cid = #{record.cid,jdbcType=BIGINT},
      modifyTime = #{record.modifytime,jdbcType=TIMESTAMP},
      behavior = #{record.behavior,jdbcType=LONGVARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update institutionLog
    set id = #{record.id,jdbcType=BIGINT},
      insid = #{record.insid,jdbcType=BIGINT},
      cid = #{record.cid,jdbcType=BIGINT},
      modifyTime = #{record.modifytime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tc.data.test.InstitutionlogWithBLOBs">
    update institutionLog
    <set>
      <if test="insid != null">
        insid = #{insid,jdbcType=BIGINT},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=BIGINT},
      </if>
      <if test="modifytime != null">
        modifyTime = #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="behavior != null">
        behavior = #{behavior,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="tc.data.test.InstitutionlogWithBLOBs">
    update institutionLog
    set insid = #{insid,jdbcType=BIGINT},
      cid = #{cid,jdbcType=BIGINT},
      modifyTime = #{modifytime,jdbcType=TIMESTAMP},
      behavior = #{behavior,jdbcType=LONGVARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tc.data.test.Institutionlog">
    update institutionLog
    set insid = #{insid,jdbcType=BIGINT},
      cid = #{cid,jdbcType=BIGINT},
      modifyTime = #{modifytime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="tc.data.test.Institutionlog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="insid" jdbcType="BIGINT" property="insid" />
    <result column="cid" jdbcType="BIGINT" property="cid" />
    <result column="modifyTime" jdbcType="TIMESTAMP" property="modifytime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="tc.data.test.InstitutionlogWithBLOBs">
    <result column="behavior" jdbcType="LONGVARCHAR" property="behavior" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, insid, cid, modifyTime
  </sql>
  <sql id="Blob_Column_List">
    behavior, description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="tc.data.test.InstitutionlogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from institutionLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="tc.data.test.InstitutionlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from institutionLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from institutionLog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from institutionLog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tc.data.test.InstitutionlogExample">
    delete from institutionLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tc.data.test.InstitutionlogWithBLOBs">
    insert into institutionLog (id, insid, cid, 
      modifyTime, behavior, description
      )
    values (#{id,jdbcType=BIGINT}, #{insid,jdbcType=BIGINT}, #{cid,jdbcType=BIGINT}, 
      #{modifytime,jdbcType=TIMESTAMP}, #{behavior,jdbcType=LONGVARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="tc.data.test.InstitutionlogWithBLOBs">
    insert into institutionLog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="insid != null">
        insid,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="modifytime != null">
        modifyTime,
      </if>
      <if test="behavior != null">
        behavior,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="insid != null">
        #{insid,jdbcType=BIGINT},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=BIGINT},
      </if>
      <if test="modifytime != null">
        #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="behavior != null">
        #{behavior,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tc.data.test.InstitutionlogExample" resultType="java.lang.Integer">
    select count(*) from institutionLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update institutionLog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.insid != null">
        insid = #{record.insid,jdbcType=BIGINT},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=BIGINT},
      </if>
      <if test="record.modifytime != null">
        modifyTime = #{record.modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.behavior != null">
        behavior = #{record.behavior,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update institutionLog
    set id = #{record.id,jdbcType=BIGINT},
      insid = #{record.insid,jdbcType=BIGINT},
      cid = #{record.cid,jdbcType=BIGINT},
      modifyTime = #{record.modifytime,jdbcType=TIMESTAMP},
      behavior = #{record.behavior,jdbcType=LONGVARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update institutionLog
    set id = #{record.id,jdbcType=BIGINT},
      insid = #{record.insid,jdbcType=BIGINT},
      cid = #{record.cid,jdbcType=BIGINT},
      modifyTime = #{record.modifytime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tc.data.test.InstitutionlogWithBLOBs">
    update institutionLog
    <set>
      <if test="insid != null">
        insid = #{insid,jdbcType=BIGINT},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=BIGINT},
      </if>
      <if test="modifytime != null">
        modifyTime = #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="behavior != null">
        behavior = #{behavior,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="tc.data.test.InstitutionlogWithBLOBs">
    update institutionLog
    set insid = #{insid,jdbcType=BIGINT},
      cid = #{cid,jdbcType=BIGINT},
      modifyTime = #{modifytime,jdbcType=TIMESTAMP},
      behavior = #{behavior,jdbcType=LONGVARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tc.data.test.Institutionlog">
    update institutionLog
    set insid = #{insid,jdbcType=BIGINT},
      cid = #{cid,jdbcType=BIGINT},
      modifyTime = #{modifytime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>