<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tc.data.test.StudentMapper">
  <resultMap id="BaseResultMap" type="tc.data.test.Student">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bankid" jdbcType="BIGINT" property="bankid" />
    <result column="memeberid" jdbcType="BIGINT" property="memeberid" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="tc.data.test.StudentWithBLOBs">
    <result column="password" jdbcType="LONGVARCHAR" property="password" />
    <result column="name" jdbcType="LONGVARCHAR" property="name" />
    <result column="imgUrl" jdbcType="LONGVARCHAR" property="imgurl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bankid, memeberid, level
  </sql>
  <sql id="Blob_Column_List">
    password, name, imgUrl
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="tc.data.test.StudentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="tc.data.test.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tc.data.test.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tc.data.test.StudentWithBLOBs">
    insert into student (id, bankid, memeberid, 
      level, password, name, 
      imgUrl)
    values (#{id,jdbcType=BIGINT}, #{bankid,jdbcType=BIGINT}, #{memeberid,jdbcType=BIGINT}, 
      #{level,jdbcType=INTEGER}, #{password,jdbcType=LONGVARCHAR}, #{name,jdbcType=LONGVARCHAR}, 
      #{imgurl,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tc.data.test.StudentWithBLOBs">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bankid != null">
        bankid,
      </if>
      <if test="memeberid != null">
        memeberid,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="imgurl != null">
        imgUrl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bankid != null">
        #{bankid,jdbcType=BIGINT},
      </if>
      <if test="memeberid != null">
        #{memeberid,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=LONGVARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="imgurl != null">
        #{imgurl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tc.data.test.StudentExample" resultType="java.lang.Integer">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bankid != null">
        bankid = #{record.bankid,jdbcType=BIGINT},
      </if>
      <if test="record.memeberid != null">
        memeberid = #{record.memeberid,jdbcType=BIGINT},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.imgurl != null">
        imgUrl = #{record.imgurl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update student
    set id = #{record.id,jdbcType=BIGINT},
      bankid = #{record.bankid,jdbcType=BIGINT},
      memeberid = #{record.memeberid,jdbcType=BIGINT},
      level = #{record.level,jdbcType=INTEGER},
      password = #{record.password,jdbcType=LONGVARCHAR},
      name = #{record.name,jdbcType=LONGVARCHAR},
      imgUrl = #{record.imgurl,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set id = #{record.id,jdbcType=BIGINT},
      bankid = #{record.bankid,jdbcType=BIGINT},
      memeberid = #{record.memeberid,jdbcType=BIGINT},
      level = #{record.level,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tc.data.test.StudentWithBLOBs">
    update student
    <set>
      <if test="bankid != null">
        bankid = #{bankid,jdbcType=BIGINT},
      </if>
      <if test="memeberid != null">
        memeberid = #{memeberid,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=LONGVARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="imgurl != null">
        imgUrl = #{imgurl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="tc.data.test.StudentWithBLOBs">
    update student
    set bankid = #{bankid,jdbcType=BIGINT},
      memeberid = #{memeberid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER},
      password = #{password,jdbcType=LONGVARCHAR},
      name = #{name,jdbcType=LONGVARCHAR},
      imgUrl = #{imgurl,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tc.data.test.Student">
    update student
    set bankid = #{bankid,jdbcType=BIGINT},
      memeberid = #{memeberid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="tc.data.test.Student">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bankid" jdbcType="BIGINT" property="bankid" />
    <result column="memeberid" jdbcType="BIGINT" property="memeberid" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="tc.data.test.StudentWithBLOBs">
    <result column="password" jdbcType="LONGVARCHAR" property="password" />
    <result column="name" jdbcType="LONGVARCHAR" property="name" />
    <result column="imgUrl" jdbcType="LONGVARCHAR" property="imgurl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bankid, memeberid, level
  </sql>
  <sql id="Blob_Column_List">
    password, name, imgUrl
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="tc.data.test.StudentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="tc.data.test.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tc.data.test.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tc.data.test.StudentWithBLOBs">
    insert into student (id, bankid, memeberid, 
      level, password, name, 
      imgUrl)
    values (#{id,jdbcType=BIGINT}, #{bankid,jdbcType=BIGINT}, #{memeberid,jdbcType=BIGINT}, 
      #{level,jdbcType=INTEGER}, #{password,jdbcType=LONGVARCHAR}, #{name,jdbcType=LONGVARCHAR}, 
      #{imgurl,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tc.data.test.StudentWithBLOBs">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bankid != null">
        bankid,
      </if>
      <if test="memeberid != null">
        memeberid,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="imgurl != null">
        imgUrl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bankid != null">
        #{bankid,jdbcType=BIGINT},
      </if>
      <if test="memeberid != null">
        #{memeberid,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=LONGVARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="imgurl != null">
        #{imgurl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tc.data.test.StudentExample" resultType="java.lang.Integer">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bankid != null">
        bankid = #{record.bankid,jdbcType=BIGINT},
      </if>
      <if test="record.memeberid != null">
        memeberid = #{record.memeberid,jdbcType=BIGINT},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.imgurl != null">
        imgUrl = #{record.imgurl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update student
    set id = #{record.id,jdbcType=BIGINT},
      bankid = #{record.bankid,jdbcType=BIGINT},
      memeberid = #{record.memeberid,jdbcType=BIGINT},
      level = #{record.level,jdbcType=INTEGER},
      password = #{record.password,jdbcType=LONGVARCHAR},
      name = #{record.name,jdbcType=LONGVARCHAR},
      imgUrl = #{record.imgurl,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set id = #{record.id,jdbcType=BIGINT},
      bankid = #{record.bankid,jdbcType=BIGINT},
      memeberid = #{record.memeberid,jdbcType=BIGINT},
      level = #{record.level,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tc.data.test.StudentWithBLOBs">
    update student
    <set>
      <if test="bankid != null">
        bankid = #{bankid,jdbcType=BIGINT},
      </if>
      <if test="memeberid != null">
        memeberid = #{memeberid,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=LONGVARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="imgurl != null">
        imgUrl = #{imgurl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="tc.data.test.StudentWithBLOBs">
    update student
    set bankid = #{bankid,jdbcType=BIGINT},
      memeberid = #{memeberid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER},
      password = #{password,jdbcType=LONGVARCHAR},
      name = #{name,jdbcType=LONGVARCHAR},
      imgUrl = #{imgurl,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tc.data.test.Student">
    update student
    set bankid = #{bankid,jdbcType=BIGINT},
      memeberid = #{memeberid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="tc.data.test.Student">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bankid" jdbcType="BIGINT" property="bankid" />
    <result column="memeberid" jdbcType="BIGINT" property="memeberid" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="tc.data.test.StudentWithBLOBs">
    <result column="password" jdbcType="LONGVARCHAR" property="password" />
    <result column="name" jdbcType="LONGVARCHAR" property="name" />
    <result column="imgUrl" jdbcType="LONGVARCHAR" property="imgurl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bankid, memeberid, level
  </sql>
  <sql id="Blob_Column_List">
    password, name, imgUrl
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="tc.data.test.StudentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="tc.data.test.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tc.data.test.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tc.data.test.StudentWithBLOBs">
    insert into student (id, bankid, memeberid, 
      level, password, name, 
      imgUrl)
    values (#{id,jdbcType=BIGINT}, #{bankid,jdbcType=BIGINT}, #{memeberid,jdbcType=BIGINT}, 
      #{level,jdbcType=INTEGER}, #{password,jdbcType=LONGVARCHAR}, #{name,jdbcType=LONGVARCHAR}, 
      #{imgurl,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tc.data.test.StudentWithBLOBs">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bankid != null">
        bankid,
      </if>
      <if test="memeberid != null">
        memeberid,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="imgurl != null">
        imgUrl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bankid != null">
        #{bankid,jdbcType=BIGINT},
      </if>
      <if test="memeberid != null">
        #{memeberid,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=LONGVARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="imgurl != null">
        #{imgurl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tc.data.test.StudentExample" resultType="java.lang.Integer">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bankid != null">
        bankid = #{record.bankid,jdbcType=BIGINT},
      </if>
      <if test="record.memeberid != null">
        memeberid = #{record.memeberid,jdbcType=BIGINT},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.imgurl != null">
        imgUrl = #{record.imgurl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update student
    set id = #{record.id,jdbcType=BIGINT},
      bankid = #{record.bankid,jdbcType=BIGINT},
      memeberid = #{record.memeberid,jdbcType=BIGINT},
      level = #{record.level,jdbcType=INTEGER},
      password = #{record.password,jdbcType=LONGVARCHAR},
      name = #{record.name,jdbcType=LONGVARCHAR},
      imgUrl = #{record.imgurl,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set id = #{record.id,jdbcType=BIGINT},
      bankid = #{record.bankid,jdbcType=BIGINT},
      memeberid = #{record.memeberid,jdbcType=BIGINT},
      level = #{record.level,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tc.data.test.StudentWithBLOBs">
    update student
    <set>
      <if test="bankid != null">
        bankid = #{bankid,jdbcType=BIGINT},
      </if>
      <if test="memeberid != null">
        memeberid = #{memeberid,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=LONGVARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="imgurl != null">
        imgUrl = #{imgurl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="tc.data.test.StudentWithBLOBs">
    update student
    set bankid = #{bankid,jdbcType=BIGINT},
      memeberid = #{memeberid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER},
      password = #{password,jdbcType=LONGVARCHAR},
      name = #{name,jdbcType=LONGVARCHAR},
      imgUrl = #{imgurl,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tc.data.test.Student">
    update student
    set bankid = #{bankid,jdbcType=BIGINT},
      memeberid = #{memeberid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>