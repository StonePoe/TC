<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tc.data.test.MembercardMapper">
  <resultMap id="BaseResultMap" type="tc.data.test.Membercard">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="balance" jdbcType="DOUBLE" property="balance" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="bankid" jdbcType="BIGINT" property="bankid" />
    <result column="suspenddate" jdbcType="DATE" property="suspenddate" />
    <result column="destroydate" jdbcType="DATE" property="destroydate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, balance, state, level, bankid, suspenddate, destroydate
  </sql>
  <select id="selectByExample" parameterType="tc.data.test.MembercardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from memberCard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from memberCard
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from memberCard
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tc.data.test.MembercardExample">
    delete from memberCard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tc.data.test.Membercard">
    insert into memberCard (id, balance, state, 
      level, bankid, suspenddate, 
      destroydate)
    values (#{id,jdbcType=BIGINT}, #{balance,jdbcType=DOUBLE}, #{state,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER}, #{bankid,jdbcType=BIGINT}, #{suspenddate,jdbcType=DATE}, 
      #{destroydate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="tc.data.test.Membercard">
    insert into memberCard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="bankid != null">
        bankid,
      </if>
      <if test="suspenddate != null">
        suspenddate,
      </if>
      <if test="destroydate != null">
        destroydate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="bankid != null">
        #{bankid,jdbcType=BIGINT},
      </if>
      <if test="suspenddate != null">
        #{suspenddate,jdbcType=DATE},
      </if>
      <if test="destroydate != null">
        #{destroydate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tc.data.test.MembercardExample" resultType="java.lang.Integer">
    select count(*) from memberCard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update memberCard
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DOUBLE},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.bankid != null">
        bankid = #{record.bankid,jdbcType=BIGINT},
      </if>
      <if test="record.suspenddate != null">
        suspenddate = #{record.suspenddate,jdbcType=DATE},
      </if>
      <if test="record.destroydate != null">
        destroydate = #{record.destroydate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update memberCard
    set id = #{record.id,jdbcType=BIGINT},
      balance = #{record.balance,jdbcType=DOUBLE},
      state = #{record.state,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER},
      bankid = #{record.bankid,jdbcType=BIGINT},
      suspenddate = #{record.suspenddate,jdbcType=DATE},
      destroydate = #{record.destroydate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tc.data.test.Membercard">
    update memberCard
    <set>
      <if test="balance != null">
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="bankid != null">
        bankid = #{bankid,jdbcType=BIGINT},
      </if>
      <if test="suspenddate != null">
        suspenddate = #{suspenddate,jdbcType=DATE},
      </if>
      <if test="destroydate != null">
        destroydate = #{destroydate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tc.data.test.Membercard">
    update memberCard
    set balance = #{balance,jdbcType=DOUBLE},
      state = #{state,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      bankid = #{bankid,jdbcType=BIGINT},
      suspenddate = #{suspenddate,jdbcType=DATE},
      destroydate = #{destroydate,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="tc.data.test.Membercard">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="balance" jdbcType="DOUBLE" property="balance" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="bankid" jdbcType="BIGINT" property="bankid" />
    <result column="suspenddate" jdbcType="DATE" property="suspenddate" />
    <result column="destroydate" jdbcType="DATE" property="destroydate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, balance, state, level, bankid, suspenddate, destroydate
  </sql>
  <select id="selectByExample" parameterType="tc.data.test.MembercardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from memberCard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from memberCard
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from memberCard
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tc.data.test.MembercardExample">
    delete from memberCard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tc.data.test.Membercard">
    insert into memberCard (id, balance, state, 
      level, bankid, suspenddate, 
      destroydate)
    values (#{id,jdbcType=BIGINT}, #{balance,jdbcType=DOUBLE}, #{state,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER}, #{bankid,jdbcType=BIGINT}, #{suspenddate,jdbcType=DATE}, 
      #{destroydate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="tc.data.test.Membercard">
    insert into memberCard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="bankid != null">
        bankid,
      </if>
      <if test="suspenddate != null">
        suspenddate,
      </if>
      <if test="destroydate != null">
        destroydate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="bankid != null">
        #{bankid,jdbcType=BIGINT},
      </if>
      <if test="suspenddate != null">
        #{suspenddate,jdbcType=DATE},
      </if>
      <if test="destroydate != null">
        #{destroydate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tc.data.test.MembercardExample" resultType="java.lang.Integer">
    select count(*) from memberCard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update memberCard
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DOUBLE},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.bankid != null">
        bankid = #{record.bankid,jdbcType=BIGINT},
      </if>
      <if test="record.suspenddate != null">
        suspenddate = #{record.suspenddate,jdbcType=DATE},
      </if>
      <if test="record.destroydate != null">
        destroydate = #{record.destroydate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update memberCard
    set id = #{record.id,jdbcType=BIGINT},
      balance = #{record.balance,jdbcType=DOUBLE},
      state = #{record.state,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER},
      bankid = #{record.bankid,jdbcType=BIGINT},
      suspenddate = #{record.suspenddate,jdbcType=DATE},
      destroydate = #{record.destroydate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tc.data.test.Membercard">
    update memberCard
    <set>
      <if test="balance != null">
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="bankid != null">
        bankid = #{bankid,jdbcType=BIGINT},
      </if>
      <if test="suspenddate != null">
        suspenddate = #{suspenddate,jdbcType=DATE},
      </if>
      <if test="destroydate != null">
        destroydate = #{destroydate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tc.data.test.Membercard">
    update memberCard
    set balance = #{balance,jdbcType=DOUBLE},
      state = #{state,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      bankid = #{bankid,jdbcType=BIGINT},
      suspenddate = #{suspenddate,jdbcType=DATE},
      destroydate = #{destroydate,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="tc.data.test.Membercard">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="balance" jdbcType="DOUBLE" property="balance" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="bankid" jdbcType="BIGINT" property="bankid" />
    <result column="suspenddate" jdbcType="DATE" property="suspenddate" />
    <result column="destroydate" jdbcType="DATE" property="destroydate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, balance, state, level, bankid, suspenddate, destroydate
  </sql>
  <select id="selectByExample" parameterType="tc.data.test.MembercardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from memberCard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from memberCard
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from memberCard
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tc.data.test.MembercardExample">
    delete from memberCard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tc.data.test.Membercard">
    insert into memberCard (id, balance, state, 
      level, bankid, suspenddate, 
      destroydate)
    values (#{id,jdbcType=BIGINT}, #{balance,jdbcType=DOUBLE}, #{state,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER}, #{bankid,jdbcType=BIGINT}, #{suspenddate,jdbcType=DATE}, 
      #{destroydate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="tc.data.test.Membercard">
    insert into memberCard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="bankid != null">
        bankid,
      </if>
      <if test="suspenddate != null">
        suspenddate,
      </if>
      <if test="destroydate != null">
        destroydate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="bankid != null">
        #{bankid,jdbcType=BIGINT},
      </if>
      <if test="suspenddate != null">
        #{suspenddate,jdbcType=DATE},
      </if>
      <if test="destroydate != null">
        #{destroydate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tc.data.test.MembercardExample" resultType="java.lang.Integer">
    select count(*) from memberCard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update memberCard
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DOUBLE},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.bankid != null">
        bankid = #{record.bankid,jdbcType=BIGINT},
      </if>
      <if test="record.suspenddate != null">
        suspenddate = #{record.suspenddate,jdbcType=DATE},
      </if>
      <if test="record.destroydate != null">
        destroydate = #{record.destroydate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update memberCard
    set id = #{record.id,jdbcType=BIGINT},
      balance = #{record.balance,jdbcType=DOUBLE},
      state = #{record.state,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER},
      bankid = #{record.bankid,jdbcType=BIGINT},
      suspenddate = #{record.suspenddate,jdbcType=DATE},
      destroydate = #{record.destroydate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tc.data.test.Membercard">
    update memberCard
    <set>
      <if test="balance != null">
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="bankid != null">
        bankid = #{bankid,jdbcType=BIGINT},
      </if>
      <if test="suspenddate != null">
        suspenddate = #{suspenddate,jdbcType=DATE},
      </if>
      <if test="destroydate != null">
        destroydate = #{destroydate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tc.data.test.Membercard">
    update memberCard
    set balance = #{balance,jdbcType=DOUBLE},
      state = #{state,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      bankid = #{bankid,jdbcType=BIGINT},
      suspenddate = #{suspenddate,jdbcType=DATE},
      destroydate = #{destroydate,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>